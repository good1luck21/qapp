{"ast":null,"code":"var _jsxFileName = \"/Users/takeru.sato/sato/study/qapp/qaapp-new-front/src/question/Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link as L } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  _s();\n\n  const [questions, setQuestions] = useState();\n  useEffect(() => {\n    axios.get(\"http://localhost:8001/questions\").then(res => {\n      console.log(res);\n    }).catch(errors => {\n      console.log(errors);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [this.state.questions === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 43\n      }, this), this.state.questions && this.state.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12 col-md-4 col-lg-3\",\n        children: /*#__PURE__*/_jsxDEV(L, {\n          to: `/question/${question.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-white bg-success mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: [\"Answers: \", question.answers]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: question.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: question.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Index, \"uyiUm6YH5BTtxf4Uw/D77HV1ue8=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/takeru.sato/sato/study/qapp/qaapp-new-front/src/question/Index.js"],"names":["React","useState","useEffect","axios","Link","L","Index","props","questions","setQuestions","get","then","res","console","log","catch","errors","state","map","question","id","answers","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAI,IAAIC,CAAhB,QAAwB,kBAAxB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACO,GAAN,CAAU,iCAAV,EACCC,IADD,CACOC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAHD,EAICG,KAJD,CAIQC,MAAD,IAAY;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACH,KAND;AAOH,GARQ,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACG,KAAKC,KAAL,CAAWT,SAAX,KAAyB,IAAzB,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADpC,EAGI,KAAKS,KAAL,CAAWT,SAAX,IAAwB,KAAKS,KAAL,CAAWT,SAAX,CAAqBU,GAArB,CAAyBC,QAAQ,iBACvD;AAAuB,QAAA,SAAS,EAAC,6BAAjC;AAAA,+BACE,QAAC,CAAD;AAAG,UAAA,EAAE,EAAG,aAAYA,QAAQ,CAACC,EAAG,EAAhC;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCAAuCD,QAAQ,CAACE,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BF,QAAQ,CAACG;AAArC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA,0BAA0BH,QAAQ,CAACI;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAUJ,QAAQ,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,cADsB,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBH,CAnCD;;GAAMd,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {Link as L} from 'react-router-dom';\n\nconst Index = (props) => {\n    const [questions, setQuestions] = useState();\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8001/questions\")\n        .then((res) => {\n            console.log(res);\n        })\n        .catch((errors) => {\n            console.log(errors);\n        })\n    })\n    \n    return(\n      <div className=\"container\">\n      <div className=\"row\">\n        {this.state.questions === null && <p>Loading questions...</p>}\n        {\n          this.state.questions && this.state.questions.map(question => (\n            <div key={question.id} className=\"col-sm-12 col-md-4 col-lg-3\">\n              <L to={`/question/${question.id}`}>\n                <div className=\"card text-white bg-success mb-3\">\n                  <div className=\"card-header\">Answers: {question.answers}</div>\n                  <div className=\"card-body\">\n                    <h4 className=\"card-title\">{question.title}</h4>\n                    <p className=\"card-text\">{question.description}</p>\n                  </div>\n                </div>\n              </L>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n    )\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}