{"ast":null,"code":"var _jsxFileName = \"/Users/takeru.sato/sato/study/qapp/qaapp-new-front/src/question/Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link as L } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  _s();\n\n  const [questions, setQuestions] = useState();\n  const [answer, setAnswer] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8001/questions\").then(res => {\n      setQuestions(res.data.qs);\n      setAnswer(res.data.as);\n    }).catch(errors => {\n      console.log(errors);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [questions === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, this), questions && questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12 col-md-4 col-lg-3\",\n        children: /*#__PURE__*/_jsxDEV(L, {\n          to: `/question/${question.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-white bg-success mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: [\"Answers: \", answer && answer.map(ans => question.id === ans.id ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: ans.content\n              }, ans.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 50\n              }, this) : \"\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: question.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: question.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Index, \"tAQRwnXUtGUVbjq3nS4kfxiEPjw=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/takeru.sato/sato/study/qapp/qaapp-new-front/src/question/Index.js"],"names":["React","useState","useEffect","axios","Link","L","Index","props","questions","setQuestions","answer","setAnswer","get","then","res","data","qs","as","catch","errors","console","log","map","question","id","ans","content","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAI,IAAIC,CAAhB,QAAwB,kBAAxB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACS,GAAN,CAAU,iCAAV,EACCC,IADD,CACOC,GAAD,IAAS;AACXL,MAAAA,YAAY,CAACK,GAAG,CAACC,IAAJ,CAASC,EAAV,CAAZ;AACAL,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAJ,CAASE,EAAV,CAAT;AACH,KAJD,EAKCC,KALD,CAKQC,MAAD,IAAY;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACCX,SAAS,KAAK,IAAd,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADvB,EAGMA,SAAS,IAAIA,SAAS,CAACc,GAAV,CAAcC,QAAQ,iBACjC;AAAuB,QAAA,SAAS,EAAC,6BAAjC;AAAA,+BACE,QAAC,CAAD;AAAG,UAAA,EAAE,EAAG,aAAYA,QAAQ,CAACC,EAAG,EAAhC;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACEd,MAAM,IAAIA,MAAM,CAACY,GAAP,CAAWG,GAAG,IACtBF,QAAQ,CAACC,EAAT,KAAgBC,GAAG,CAACD,EAApB,gBAAyB;AAAA,0BAAiBC,GAAG,CAACC;AAArB,iBAAQD,GAAG,CAACD,EAAZ;AAAA;AAAA;AAAA;AAAA,sBAAzB,GAA6D,EADrD,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BD,QAAQ,CAACI;AAArC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA,0BAA0BJ,QAAQ,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAUL,QAAQ,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,cADW,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BH,CAzCD;;GAAMlB,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {Link as L} from 'react-router-dom';\n\nconst Index = (props) => {\n    const [questions, setQuestions] = useState();\n    const [answer, setAnswer] = useState([]);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8001/questions\")\n        .then((res) => {\n            setQuestions(res.data.qs);\n            setAnswer(res.data.as);\n        })\n        .catch((errors) => {\n            console.log(errors);\n        })\n    }, [])\n\n    return(\n      <div className=\"container\">\n      <div className=\"row\">\n      {questions === null && <p>Loading questions...</p>}\n          {\n            questions && questions.map(question => (\n              <div key={question.id} className=\"col-sm-12 col-md-4 col-lg-3\">\n                <L to={`/question/${question.id}`}>\n                  <div className=\"card text-white bg-success mb-3\">\n                    <div className=\"card-header\">Answers: {\n                      answer && answer.map(ans => (\n                        question.id === ans.id ? <p key={ans.id}>{ans.content}</p> : \"\"\n                      ))\n                    }</div>\n                    <div className=\"card-body\">\n                      <h4 className=\"card-title\">{question.title}</h4>\n                      <p className=\"card-text\">{question.description}</p>\n                    </div>\n                  </div>\n                </L>\n              </div>\n            ))\n          }\n      </div>\n    </div>\n    )\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}