{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken, token);\n  };\n\n  if (token === null || token === \"\" || token === undefined) {\n    localStorage.setItem('token', JSON.stringify(\"\"));\n    setToken(\"\");\n  }\n\n  return {\n    setToken: saveToken,\n    token\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["/Users/takeru.sato/sato/study/react/qapp/qaapp-new-front/src/auth/useToken.js"],"names":["useState","useToken","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify","undefined"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAChC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMC,SAAS,GAAKC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAApB;AACA,WAAOG,SAAP;AACD,GAJD;;AAKA,QAAK,CAACG,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACE,QAAQ,EAAT,CAAjC;;AAEA,QAAMS,SAAS,GAAGL,SAAS,IAAI;AAC7BF,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAA9B;AACAI,IAAAA,QAAQ,CAACJ,SAAD,EAAYG,KAAZ,CAAR;AACD,GAHD;;AAIA,MAAGA,KAAK,KAAG,IAAR,IAAgBA,KAAK,KAAG,EAAxB,IAA8BA,KAAK,KAAGK,SAAzC,EAAmD;AAC/CV,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,SAAL,CAAe,EAAf,CAA9B;AACAH,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;;AACD,SAAO;AACLA,IAAAA,QAAQ,EAAEC,SADL;AAELF,IAAAA;AAFK,GAAP;AAID;;GApBuBR,Q","sourcesContent":["import {useState} from 'react';\n\nexport default function useToken(){\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken   = JSON.parse(tokenString);\n    return userToken\n  };\n  const[token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken, token);\n  }\n  if(token===null || token===\"\" || token===undefined){\n      localStorage.setItem('token', JSON.stringify(\"\"));\n      setToken(\"\");\n  }\n  return {\n    setToken: saveToken,\n    token,\n  }\n}"]},"metadata":{},"sourceType":"module"}