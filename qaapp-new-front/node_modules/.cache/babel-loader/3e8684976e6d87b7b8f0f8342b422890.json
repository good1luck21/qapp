{"ast":null,"code":"var _jsxFileName = \"/Users/takeru.sato/sato/study/qapp/qaapp-new-front/src/auth/Auth.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport New from '../user/New';\nimport Login from '../user/Login';\nimport AuthUser from './AuthUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  let urlparams = props.location.pathname; // const { match: { params } } = props;\n\n  console.log(urlparams);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Login, {\n      setToken: props.setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(New, {\n      setToken: props.setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/takeru.sato/sato/study/qapp/qaapp-new-front/src/auth/Auth.js"],"names":["React","Redirect","New","Login","AuthUser","Auth","props","urlparams","location","pathname","console","log","setToken"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,MAAIC,SAAS,GAAGD,KAAK,CAACE,QAAN,CAAeC,QAA/B,CADsB,CAEtB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAED,KAAK,CAACM;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAEN,KAAK,CAACM;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAVD;;KAAMP,I;AAYN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport {Redirect} from 'react-router-dom';\nimport New from '../user/New';\nimport Login from '../user/Login';\nimport AuthUser from './AuthUser';\n\nconst Auth = (props) => {\n  let urlparams = props.location.pathname;\n  // const { match: { params } } = props;\n  console.log(urlparams);\n  return(\n    <>\n      <Login setToken={props.setToken} />\n      <New setToken={props.setToken} />\n    </>\n  )\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}